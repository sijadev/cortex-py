@startuml Linking Classes
skinparam backgroundColor #FFFFFF
skinparam classAttributeIconSize 0
skinparam shadowing false
skinparam ArrowColor #374151
skinparam ClassFontColor #111827
skinparam ClassBorderColor #94A3B8
skinparam ClassBackgroundColor #F9FAFB

class RuleBasedLinker {
  - cortex_path: Path
  - rules_file: Path
  - rules: List<LinkRule>
  - config: dict
  - file_cache: dict
  - tag_cache: dict
  + load_rules()
  + create_default_rules()
  + save_rules()
  + find_files_matching_pattern(pattern: str): List<Path>
  + extract_tags_from_file(file_path: Path): List[str]
  + files_share_tags(file1: Path, file2: Path): bool
  + apply_rule(rule: LinkRule): List<LinkMatch>
  + should_link_files(source: Path, target: Path, rule: LinkRule): bool
  + files_have_similar_names(file1: Path, file2: Path): bool
  + files_have_content_relationship(source: Path, target: Path): bool
  + apply_rules(): List<LinkMatch>
  + create_links(matches: List<LinkMatch]): dict
  + update_file_with_links(source_file: Path, matches: List<LinkMatch]): bool
  + add_links_to_section(content: str, section_name: str, links: List[str], auto_create: bool): str
  + run_linking_cycle(): dict
}

class LinkRule {
  + name: str
  + description: str
  + trigger: dict
  + target: dict
  + action: str
  + strength: float
  + enabled: bool
}

class LinkMatch {
  + rule_name: str
  + source_file: Path
  + target_file: Path
  + strength: float
  + action: str
  + reason: str
}

class CrossVaultLinker {
  - cortex_root: Path
  + validate_links(): dict
  + fix_invalid_links(invalid_links: List[dict]): dict
  - _find_all_links(): List[dict]
  - _check_links(links: List[dict]): (List[dict], List[dict])
}

RuleBasedLinker "1" *-- "*" LinkRule
RuleBasedLinker --> "*" LinkMatch

note right of RuleBasedLinker
  Responsibilities:
  - Regeln laden/speichern (YAML)
  - Matches ermitteln (tags/name/content)
  - Dateien aktualisieren (Sections/Links)
  Patterns:
  - Rule Engine, Data-Driven
  - Pipeline/Template Method (Linking-Zyklus)
end note

note right of CrossVaultLinker
  Aktuell Demo/Stub für Validation/Fix,
  Ziel: echte Parser & Pfadauflösung
end note

@enduml
