# Cortex Rule-Based Link Creation System
# Automated, predictable cross-vault linking based on defined patterns

# Rule Structure:
# - name: Human-readable rule description
# - trigger: Conditions that activate this rule
# - target: What to link to
# - action: Type of link to create
# - strength: Confidence score (0.0 - 1.0)
# - enabled: Whether this rule is active

link_rules:
  # === ARCHITECTURE DECISION RECORDS ===
  - name: "ADR Implementation Links"
    description: "Link ADRs to their implementation files"
    trigger:
      tags: ["adr", "decision", "architecture"]
      path_pattern: "03-Decisions/ADR-*.md"
    target:
      tags: ["implementation", "code"]
      path_pattern: "01-Projects/*/Implementation*.md"
    action: "implementation_reference"
    strength: 0.95
    enabled: true

  - name: "ADR Cross-References"
    description: "Link related ADRs together"
    trigger:
      tags: ["adr"]
      content_contains: ["ADR-"]
    target:
      path_pattern: "03-Decisions/ADR-*.md"
    action: "cross_reference"
    strength: 0.90
    enabled: true

  # === PROJECT PATTERNS ===
  - name: "Project Charter to Implementation"
    description: "Link project charters to their code implementations"
    trigger:
      filename: "Project-Charter.md"
      path_pattern: "01-Projects/*/"
    target:
      path_pattern: "04-Code-Fragments/*.md"
      tags: ["code", "implementation"]
    action: "implementation_link"
    strength: 0.85
    enabled: true

  - name: "Lessons Learned to Pattern Library"
    description: "Extract patterns from project lessons learned"
    trigger:
      filename_contains: ["Lessons-Learned", "Retrospective"]
      path_pattern: "01-Projects/*/"
    target:
      path: "05-Insights/Pattern-Library.md"
    action: "pattern_extraction"
    strength: 0.88
    enabled: true

  # === TECHNICAL PATTERNS ===
  - name: "API Pattern Links"
    description: "Link API-related content together"
    trigger:
      content_contains: ["FastAPI", "REST API", "GraphQL", "API endpoint"]
      tags: ["api", "backend"]
    target:
      filename_pattern: "*API*.md"
      path_pattern: "04-Code-Fragments/*"
    action: "technical_reference"
    strength: 0.80
    enabled: true

  - name: "Testing Pattern Links"
    description: "Link testing strategies and implementations"
    trigger:
      tags: ["testing", "qa", "test-strategy"]
      content_contains: ["pytest", "test", "testing"]
    target:
      filename_pattern: "*Test*.md"
      tags: ["testing", "quality-assurance"]
    action: "testing_reference"
    strength: 0.82
    enabled: true

  # === TECHNOLOGY STACKS ===
  - name: "Frontend Technology Links"
    description: "Connect frontend-related content"
    trigger:
      tags: ["frontend", "react", "vue", "javascript"]
      content_contains: ["React", "Vue", "JavaScript", "TypeScript"]
    target:
      tags: ["frontend", "ui", "component"]
      path_pattern: "04-Code-Fragments/*Frontend*"
    action: "technology_reference"
    strength: 0.78
    enabled: true

  - name: "Backend Technology Links"
    description: "Connect backend-related content"
    trigger:
      tags: ["backend", "python", "fastapi", "database"]
      content_contains: ["Python", "FastAPI", "SQLAlchemy", "PostgreSQL"]
    target:
      tags: ["backend", "api", "database"]
      path_pattern: "04-Code-Fragments/*Backend*"
    action: "technology_reference"
    strength: 0.78
    enabled: true

  # === CROSS-PROJECT LEARNING ===
  - name: "Similar Project Patterns"
    description: "Link projects using similar technologies or patterns"
    trigger:
      path_pattern: "01-Projects/*/Technology-Stack.md"
      tags: ["technology", "stack"]
    target:
      path_pattern: "01-Projects/*/Technology-Stack.md"
      exclude_same_project: true
    action: "pattern_similarity"
    strength: 0.75
    enabled: true

  - name: "Neural Link Enhancement"
    description: "Connect related neural links and chat sessions"
    trigger:
      path_pattern: "02-Neural-Links/**/*.md"
      tags: ["chat-session", "insight"]
    target:
      path_pattern: "02-Neural-Links/**/*.md"
      content_similarity_threshold: 0.7
    action: "content_similarity"
    strength: 0.70
    enabled: true

  # === INSIGHTS AND KNOWLEDGE ===
  - name: "Insight to Implementation"
    description: "Link insights to their practical implementations"
    trigger:
      path_pattern: "05-Insights/*.md"
      tags: ["insight", "pattern", "best-practice"]
    target:
      path_pattern: "01-Projects/*/*.md"
      content_contains: ["implementation", "code", "example"]
    action: "insight_application"
    strength: 0.83
    enabled: true

  - name: "Decision to Code Pattern"
    description: "Link decisions to code patterns that implement them"
    trigger:
      path_pattern: "03-Decisions/*.md"
      content_contains: ["implement", "code", "pattern"]
    target:
      path_pattern: "04-Code-Fragments/*.md"
    action: "decision_implementation"
    strength: 0.87
    enabled: true

# === RULE CONFIGURATION ===
rule_config:
  # Global settings
  min_strength_threshold: 0.7
  max_links_per_file: 10
  enable_bidirectional_links: true
  
  # Link creation behavior
  auto_create_sections: true
  section_names:
    implementation_reference: "Implementation"
    cross_reference: "Related Decisions"
    technical_reference: "Technical References"
    pattern_similarity: "Similar Projects"
    content_similarity: "Related Content"
  
  # Content analysis
  content_similarity_algorithm: "jaccard"  # Options: jaccard, cosine, levenshtein
  tag_weight: 0.6
  content_weight: 0.3
  path_weight: 0.1
  
  # Performance settings
  max_file_size_kb: 1024
  cache_results: true
  cache_ttl_hours: 24

# === VALIDATION RULES ===
validation:
  # Prevent circular references
  prevent_circular_links: true
  max_link_depth: 3
  
  # Quality controls
  require_mutual_relevance: true
  min_content_overlap: 3  # minimum common words/tags
  
  # Exclusions
  exclude_patterns:
    - "**/.obsidian/**"
    - "**/Template*.md"
    - "**/Archive/**"
    - "**/99-Archive/**"
    - "**/*test*.md"
    - "**/*Test*.md"