#!/bin/bash
# Cortex CLI Wrapper - Dynamische Cortex-Erkennung
# Unterstützt lokale und Cloud-basierte Cortex-Installationen

# Finde das cortex-cli Verzeichnis dynamisch
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
CORTEX_CLI_PATH=""

# Suche nach cortex-cli in verschiedenen Pfaden
if [ -d "$SCRIPT_DIR/cortex-cli" ]; then
    CORTEX_CLI_PATH="$SCRIPT_DIR/cortex-cli"
elif [ -d "/workspaces/cortex-py/cortex-cli" ]; then
    CORTEX_CLI_PATH="/workspaces/cortex-py/cortex-cli"
elif [ -d "$HOME/cortex/cortex-cli" ]; then
    CORTEX_CLI_PATH="$HOME/cortex/cortex-cli"
elif [ -d "/usr/local/lib/cortex-cli" ]; then
    CORTEX_CLI_PATH="/usr/local/lib/cortex-cli"
fi

# Fallback: Python-Paket verwenden wenn installiert
if [ -z "$CORTEX_CLI_PATH" ]; then
    if python -c "import cortex.cli.main" 2>/dev/null; then
        exec python -m cortex.cli.main "$@"
    else
        echo "❌ Cortex CLI nicht gefunden!"
        echo ""
        echo "Installationsoptionen:"
        echo "1. cd /path/to/cortex-cli && pip install -e ."
        echo "2. Oder manuell: export PYTHONPATH=/path/to/cortex-cli"
        exit 1
    fi
fi

# Führe CLI mit dynamischem PYTHONPATH aus
export PYTHONPATH="$CORTEX_CLI_PATH:$PYTHONPATH"
exec python -c "
import sys
sys.path.insert(0, '$CORTEX_CLI_PATH')
from cortex.cli.main import cli
cli()
" "$@"
