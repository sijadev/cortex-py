name: ðŸ”¬ Unit Tests & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_call:
    inputs:
      coverage-threshold:
        description: 'Minimum coverage percentage'
        required: false
        default: '80'
        type: string

env:
  PYTHON_VERSION: "3.11"
  NEO4J_DISABLED: "1"
  CI: "true"

jobs:
  unit-tests:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-unit-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-unit-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run unit tests with coverage
      run: |
        echo "ðŸ”¬ Running Unit Tests with Coverage..."
        python -m pytest tests/unit/ \
          -v \
          --tb=short \
          --cov=src \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=${{ inputs.coverage-threshold || '80' }} \
          --junitxml=test-results.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: cortex-unit-tests
        fail_ci_if_error: false

    - name: Upload test results and coverage
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-results-${{ github.run_number }}
        path: |
          coverage.xml
          htmlcov/
          test-results.xml
        retention-days: 30

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MINIMUM_GREEN: 90
        MINIMUM_ORANGE: 70
