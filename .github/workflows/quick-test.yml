name: ⚡ Quick Tests

on:
  push:
    branches: [ feature/*, bugfix/*, hotfix/* ]
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize ]
  workflow_dispatch:
    inputs:
      test-level:
        description: 'Test level (smoke, unit, all)'
        required: false
        default: 'smoke'
        type: choice
        options:
        - smoke
        - unit
        - all

env:
  PYTHON_VERSION: "3.11"
  NEO4J_DISABLED: "1"
  CI: "true"

jobs:
  quick-validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Shallow clone für Geschwindigkeit

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-quick-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-quick-
          ${{ runner.os }}-pip-

    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Nur essential dev dependencies für Quick Tests
        pip install pytest

    - name: Run smoke tests (always)
      run: |
        echo "💨 Running quick smoke tests..."
        python run_smoke_tests.py

    - name: Run unit tests (if requested)
      if: inputs.test-level == 'unit' || inputs.test-level == 'all'
      run: |
        echo "🔬 Running unit tests..."
        python -m pytest tests/unit/ -v --tb=short --maxfail=3

    - name: Run basic integration tests (if all requested)
      if: inputs.test-level == 'all'
      run: |
        echo "🔗 Running basic integration tests..."
        python -m pytest tests/integration/test_system_integration.py::TestSystemIntegration::test_project_structure_completeness -v

  syntax-check:
    name: Syntax & Import Check
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Check Python syntax
      run: |
        echo "🔍 Checking Python syntax..."
        python -m py_compile src/**/*.py
        python -m py_compile cortex-cli/**/*.py
        python -m py_compile tests/**/*.py

    - name: Test direct imports
      run: |
        echo "📦 Testing direct imports..."
        python tests/test_direct_imports.py

    - name: Quick status summary
      run: |
        echo "⚡ Quick Tests Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Syntax check: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Import check: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Smoke tests: ✅" >> $GITHUB_STEP_SUMMARY
